#summary basic instructions.

= Introduction =

NetBaker is a TCP framework for Android Platform. You can create TCP server applications quickly by using these classes.


= Details =

NetBaker comes with a simple HTTP server as example, which you can modify. Or you can create a new server by implementing the InetBakerProtocol interface. 

= Installation =

 # Copy the package "org.thecodebakers.webxpose.netbaker.core" to your project's source folder;
 # Create your own implementation of "InetBakerProtocol" interface. You must implement both methods. See comments inside our sample for instructions;
 # Add network permissions to your "AndroidManifest.xml" file, as shown in the sample;
 # Copy the string files "netbaker_core_messages.xml" and "netbaker_starter_messages.xml" to your project's "res/values" folder;
 # Use class "NetBakerStarter" to check our start your server;

This is a basic code to start a NetBaker based server:
{{{
    	NetBakerStarter.context = this.getApplicationContext();
    	NetBakerStarter.debug = true;
    	NetBakerStarter.toastError = true;
    	if (NetBakerStarter.checkNetwork().size() > 0) {
    		if (!NetBakerStarter.checkAdminPort(8081)) {
    			NetBakerStarter.startService(8080, 8081, "Test", "org.thecodebakers.webxpose.netbaker.protocols.NetBakerHttp");
    		}
    	}
}}}

Where:
 * 8080 - The main port number. Must be above 1024;
 * 8081 - The admin port number. Must be above 1024 and different from main port number;
 * "Test" - The server name;
 * "org.thecodebakers.webxpose.netbaker.protocols.NetBakerHttp" - our sample implementation of an HTTP server. You must provide your own class;

This is a basic code to stop a NetBaker based server:
{{{
    	NetBakerStarter.context = this.getApplicationContext();
    	NetBakerStarter.debug = true;
    	NetBakerStarter.toastError = true;
    	if (NetBakerStarter.checkNetwork().size() > 0) {
    		if (NetBakerStarter.checkAdminPort(8081)) {
    			NetBakerStarter.requestStop(8081);
    		}
    	}
}}}